?str
createNode <- function(formula, values, states) {
print (formula)
formula = split(formula)
print (formula)
}
createNode('tub|asia', values=c(1,99),states=yn)
createNode <- function(formula, values, states) {
print (formula)
formula = split(formula)
print (formula)
}
createNode('tub|asia', values=c(1,99),states=yn)
?split
formula = split(formula, '|')
createNode <- function(formula, values, states) {
print (formula)
formula = split(formula, '|')
print (formula)
}
createNode('tub|asia', values=c(1,99),states=yn)
createNode <- function(formula, values, states) {
print (formula)
formula = split(formula, '|')
print (formula[0])
print (formula[1])
print (formula[2])
}
createNode('tub|asia', values=c(1,99),states=yn)
createNode <- function(formula, values, states) {
formula = split(formula, '|')
print (formula[0])
}
createNode('tub|asia', values=c(1,99),states=yn)
formula = "tub|asia"
formula = split(formula, '|')
formula[0]
typeof(formula)
formula = as.vector("tub|asia")
formula = split(formula, '|')
formula[0]
formula = as.vector("tub|asia")
typeof(formula)
g <- airquality$Month
l <- split(airquality, g)
l
clear()
formula = as.vector("tub|asia")
formula = split(formula, '|')
formula[0]
formula = split(formula, "tub")
formula[0]
formula = split(formula, "|")
formula[0]
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
# split x on the letter e
strsplit(x, "e")
formula = strsplit(formula, "|")
formula = "tub|asia"
formula = strsplit(formula, "|")
print (formula[0])
print (formula)
print (formula[1])
formula = "tub|asia"
x = c(as = formula)
formula = strsplit(x, "|")
print (formula[1])
print strsplit(x, "|")
strsplit(x, "|")
teste = strsplit(x, "|")
print (teste$as)
formula = "tub|asia"
x = c(as = formula)
formula = strsplit(x, "[|]")
formula[0]
formula = "tub|asia"
strsplit(formula, "[|]")
formula = strsplit(x, "[|]")
formula[0]
formula[1]
formula = "tub|asia"
strsplit(formula, "[|]")
formula = strsplit(formula, "[|]")
formula[1]
formula[0]
?strsplit
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
teste = strsplit(x, "e")
teste[0]
teste
teste$as
x = c(formula = "tub|asia")
formula = strsplit(x, "[|]")
formula[0]
formula = strsplit(x, "[|]")
formula = "tub|asia"
x = c(formula = "tub|asia")
formula = strsplit(x, "[|]")
formula$formula
formula$formula[0]
formula$formula[1]
formula$formula[2]
formula = "tubasia"
x = c(formula = "tubasia")
formula = strsplit(x, "[|]")
formula$formula[2]
formula$formula[1]
formula$formula[2]
x = c(formula)
formula = strsplit(x, "[|]")
x = c(formula)
formula = strsplit(x, "[|]")
formula = "tub|asia"
formula = strsplit(formula, "[|]")
formula$formula[2]
formula
formula[1]
formula[1][1]
formula[[1]]
formula[[1]][1]
formula[[1]][2]
nome = formula[[1]][1]
nome
a
yn <- c("yes","no")
a <- cptable(~asia, values=c(1,99),levels=yn)
library("gRain", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
yn <- c("yes","no")
a <- cptable(~asia, values=c(1,99),levels=yn)
a
t.a <- cptable(~tub|asia, values=c(5,95,1,99),levels=yn)
t.a
e.lt <- cptable(~either|lung:tub,values=c(1,0,1,0,1,0,0,1),levels=yn)
e.lt
typeof(a)
typeof(t.a)
typeof(yn)
class(e.lt)
?prob
?cat
cat(paste(letters, 100* 1:26), fill = TRUE, labels = paste0("{", 1:10, "}:"))
cat(a)
print (a)
cat(a$values)
cat(Bone)
cat("Node info")
print(cptable)
print.cptable
a
b
t.a
compileCPT(list(t.a, e.lt))
),lev
compileCPT(list(a, t.a, e.lt))
a = cptable(~asia, values=c(5,95),levels=yn)
t.a <- cptable(~tub|asia, values=c(5,95,1,99),levels=yn)
e.lt <- cptable(~either|lung:tub,values=c(1,0,1,0,1,0,0,1),levels=yn)
compileCPT(list(a, t.a, e.lt))
e.lt <- cptable(~either|tub,values=c(1,0,1,0,1,0,0,1),levels=yn)
compileCPT(list(a, t.a, e.lt))
yn <- c("yes","no")
a <- cptable(~asia, values=c(1,99),levels=yn)
t.a <- cptable(~tub|asia, values=c(5,95,1,99),levels=yn)
s <- cptable(~smoke, values=c(5,5), levels=yn)
l.s <- cptable(~lung|smoke, values=c(1,9,1,99), levels=yn)
b.s <- cptable(~bronc|smoke, values=c(6,4,3,7), levels=yn)
e.lt <- cptable(~either|lung:tub,values=c(1,0,1,0,1,0,0,1),levels=yn)
x.e <- cptable(~xray|either, values=c(98,2,5,95), levels=yn)
d.be <- cptable(~dysp|bronc:either, values=c(9,1,7,3,8,2,1,9), levels=yn)
plist <- compileCPT(list(a, t.a, s, l.s, b.s, e.lt, x.e, d.be))
plist
compileCPT
plist$xray
class(~lung|smoke)
cptable
lista = "asda asd | sd"
strsplit(lista, " | ")
print.querygrain
querygrain
print("oi")
print('\n')
print("oi")
print(\n)
text = read.csv2("saida_final_cxBlend", header = F, sep='\t')
setwd("~/Documents/UnB/GA/projeto-ga/log com vetor")
text = read.csv2("saida_final_cxBlend", header = F, sep='\t')
text = read.csv2("saida_final_cxBlend.txt", header = F, sep='\t')
text[,1]#l-test
mean(as.numeric(text[1,1]), na.rm = TRUE)
mean(as.numeric(as.character(text[,2])), na.rm = TRUE)
pop = (a <- rep(0, 40))
for (i in 1:40){
pop[i] = i
}
mediaG = (a <- rep(0, 40))
for (j in 1:40){
for (i in 0:09){
mediaG[j] = mediaG[j] + as.numeric(as.character(text$Tempo.total.de.execucao.de.cada.geracao.em.segundos[((40*i)+j)]))
}
mediaG[j] = mediaG[j]/10
}
length(mediaG)
plot(y = mediaG, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
length(mediaG)
mediaG = (a <- rep(0, 40))
for (j in 1:40){
for (i in 0:09){
mediaG[j] = mediaG[j] + as.numeric(as.character(text$V1[((40*i)+j)]))
}
mediaG[j] = mediaG[j]/10
}
length(mediaG)
plot(y = mediaG, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaG = (a <- rep(0, 40))
for (j in 1:40){
for (i in 0:09){
mediaG[j] = mediaG[j] + as.numeric(as.character(text$V2[((40*i)+j)]))
}
mediaG[j] = mediaG[j]/10
}
length(mediaG)
plot(y = mediaG, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaLtest = (a <- rep(0, 40))
for (j in 1:40){
for (i in 0:09){
mediaLtest[j] = mediaLtest[j] + as.numeric(as.character(text$V1[((40*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest[j] = mediaLtest[j]/10
#print (mediaLtest[j])
}
plot(y = mediaLtest, x = pop, xlab = "Pop[x]", ylab="Media L-test")
pop = (a <- rep(0, 100))
for (i in 1:100){
pop[i] = i
}
mediaG = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaG[j] = mediaG[j] + as.numeric(as.character(text$V2[((100*i)+j)]))
}
mediaG[j] = mediaG[j]/10
}
length(mediaG)
plot(y = mediaG, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaLtest = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest[j] = mediaLtest[j] + as.numeric(as.character(text$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest[j] = mediaLtest[j]/10
#print (mediaLtest[j])
}
plot(y = mediaLtest, x = pop, xlab = "Pop[x]", ylab="Media L-test")
mean(as.numeric(as.character(text[,2])), na.rm = TRUE)
text$V1[1]
text2points = read.csv2("saida_final_twopoints.txt", header = F, sep='\t')
text2points[,1]#l-test
text2points[,2]#tempo
head(text, n = 10)
mean(as.numeric((text2points[1,1])), na.rm = TRUE)
mean(as.numeric(as.character(text2points[,2])), na.rm = TRUE)
pop = (a <- rep(0, 100))
for (i in 1:40){
pop[i] = i
}
mediaG2points = (a <- rep(0, 100))
for (j in 1:40){
for (i in 0:09){
mediaG2points[j] = mediaG2points[j] + as.numeric(as.character(text2points$Tempo.total.de.execucao.de.cada.geracao.em.segundos[((40*i)+j)]))
}
mediaG2points[j] = mediaG2points[j]/10
}
mean(as.numeric(as.character(text2points[,2])), na.rm = TRUE)
mean(as.numeric((text2points[1,1])), na.rm = TRUE)
mediaG2points = (a <- rep(0, 100))
for (j in 1:40){
for (i in 0:09){
mediaG2points[j] = mediaG2points[j] + as.numeric(as.character(text2points$V2[((40*i)+j)]))
}
mediaG2points[j] = mediaG2points[j]/10
}
plot(y = mediaG2points, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$1[((100*i)+j)]))
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
mediaLtest[2]
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
exit(0)
#print (mediaLtest[j])
}
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
break()
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
#break()
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
text2points = read.csv2("saida_final_twopoints.txt", header = F, sep='\t')
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
#break()
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
pop = (a <- rep(0, 100))
for (i in 1:40){
pop[i] = i
}
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
#break()
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
text2points = read.csv2("saida_final_twopoints.txt", header = F, sep='\t')
text2points = read.csv2("saida_final_twopoints.txt", header = F, sep='\t')
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
#break()
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
mean(text2points$V1)
text2points$V1
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
break()
#print (mediaLtest[j])
}
for (j in 1:3){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
#print (mediaLtest[j])
}
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
print ( mediaLtest2points[j])
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
text = read.csv2("saida_final_cxBlend.txt", header = F, sep='\t')
text2points = read.csv2("saida_final_twopoints.txt", header = F, sep='\t')
pop = (a <- rep(0, 100))
for (i in 1:40){
pop[i] = i
}
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
pop
pop = (a <- rep(0, 100))
for (i in 1:100){
pop[i] = i
}
mediaG2points = (a <- rep(0, 100))
for (j in 1:40){
for (i in 0:09){
mediaG2points[j] = mediaG2points[j] + as.numeric(as.character(text2points$V2[((40*i)+j)]))
}
mediaG2points[j] = mediaG2points[j]/10
}
plot(y = mediaG2points, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaG2points = (a <- rep(0, 100))
for (j in 1:40){
for (i in 0:09){
mediaG2points[j] = mediaG2points[j] + as.numeric(as.character(text2points$V2[((100*i)+j)]))
}
mediaG2points[j] = mediaG2points[j]/10
}
plot(y = mediaG2points, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaG2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaG2points[j] = mediaG2points[j] + as.numeric(as.character(text2points$V2[((100*i)+j)]))
}
mediaG2points[j] = mediaG2points[j]/10
}
plot(y = mediaG2points, x = pop, xlab = "Pop[x]", ylab="Media do Tempo Gasto (s)")
mediaLtest2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest2points[j] = mediaLtest2points[j] + as.numeric(as.character(text2points$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest2points[j] = mediaLtest2points[j]/10
#print (mediaLtest[j])
}
plot(y = mediaLtest2points, x = pop, xlab = "Pop[x]", ylab="Media L-test")
mediaLtest2points
mediaLtest = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest[j] = mediaLtest[j] + as.numeric(as.character(text$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest[j] = mediaLtest[j]/10
#print (mediaLtest[j])
}
mediaLtest
mediaG = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaG[j] = mediaG[j] + as.numeric(as.character(text$V2[((100*i)+j)]))
}
mediaG[j] = mediaG[j]/10
}
mediaG
mediaLtest = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaLtest[j] = mediaLtest[j] + as.numeric(as.character(text$V1[((100*i)+j)]))
#print (as.numeric(as.character(text$Best.L.test.valeu[((40*i)+j)])))
}
mediaLtest[j] = mediaLtest[j]/10
#print (mediaLtest[j])
}
mediaG2points = (a <- rep(0, 100))
for (j in 1:100){
for (i in 0:09){
mediaG2points[j] = mediaG2points[j] + as.numeric(as.character(text2points$V2[((100*i)+j)]))
}
mediaG2points[j] = mediaG2points[j]/10
}
mediaG2points
mediaLtest2points
mediaLtest
