strsplit(lista, " | ")
print.querygrain
querygrain
print("oi")
print('\n')
print("oi")
print(\n)
plot(binaryFlipBit, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
lines(binaryUniform, type='l', col = colors[2], pch = 0)
lines(binarymutShuffleIndexes, type='l', col = colors[3], pch = 1, lty = 4, lwd = 5)
legend('bottomright', names2, pch = c(19,19,19), col = c(colors[1], colors[2], colors[3]))
title("Media do fitness das mutacoes para cromossomos binarios")
plot(binaryFlipBit, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
#######selecao#######
raw_data = read.csv2("CF01/clean_CF01-selWorst(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selWorst = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-selTournament(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selTournament = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-selRoulette(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selRoulette = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_selRandom(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selRandom = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-selBest(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selBest = apply(teste, 2, mean)
#selecao
selecaof = data.frame(selBest, selRandom, selRoulette, selTournament, selWorst)
names6 = c('Best','Random','Roleta','Torneio','Worst')
boxplot(selecaof, names = names6, las = 3)
colors <- brewer.pal(5, "Paired")
plot(selBest, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Posicao Individuo')
lines(selRandom, type='l', col = colors[2], pch = 10)
lines(selRoulette, type='l', col = colors[3], pch = 1)
lines(selTournament, type='l', col = colors[4], pch = 2)
lines(selWorst, type='l', col = colors[5], pch = 8, lty = 4, lwd = 5)
legend('bottomright', names6, pch = c(19,19,19,19,19), col = c(colors[1], colors[2], colors[3], colors[4], colors[5]))
####mutacao#####
raw_data = read.csv2("CF01/clean_CF01-mutFlipBit(selBest, cxOnePoint).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutFlipBit = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-mutPolynomialBounded(selBest, cxOnePoint).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutPolynomialBounded = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-mutShuffleIndexes(cxOnePoint, selBest).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutShuffleIndexes = apply(teste, 2, mean)
mutacaof = data.frame(mutFlipBit, mutPolynomialBounded, mutShuffleIndexes)
names5 = c('Flipbit','Polynomial','Shuflle')
boxplot(mutacaof, names = names5, las = 3)
colors <- brewer.pal(3, "Set1")
plot(mutFlipBit, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
lines(mutPolynomialBounded, type='l', col = colors[2], pch = 0)
lines(mutShuffleIndexes, type='l', col = colors[3], pch = 1, lty = 4, lwd = 5)
legend('bottomright', names5, pch = c(19,19,19), col = c(colors[1], colors[2], colors[3]))
####crossover#####
raw_data = read.csv2("CF01/clean_CF01-cxBlend(selBest, mutFlmutShuffleIndexesipBit).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxBlend = apply(teste, 2, mean, na.rm = T)
raw_data = read.csv2("CF01/clean_CF01-cxOnePoint(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxOnePoint = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxSimulatedBinary(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxSimulatedBinary = apply(teste, 2, mean, na.rm = T)
raw_data = read.csv2("CF01/clean_CF01-mutShuffleIndexes(cxOnePoint, selBest).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutShuffleIndexes = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxSimulatedBinaryBounded(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxSimulatedBinaryBounded = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxTwoPoints(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxTwoPoints = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxUniform(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxUniform = apply(teste, 2, mean)
cxf = data.frame(cxSimulatedBinaryBounded, cxOnePoint, cxTwoPoints, cxUniform)
names4 = c('SimulateB.','1point' ,'2point','Uniform')
boxplot(cxf, names = names4, las = 3)
#boxplot(cxBlend)
#boxplot(cxSimulatedBinary)
colors <- brewer.pal(6, "Set1")
plot(cxBlend, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
plot(cxSimulatedBinary, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
plot(cxTwoPoints, type='l', col = colors[1], pch = 2, lwd = 1, ylab='medias', xlab='Geracoes')
lines(cxOnePoint, type='l', col = colors[4], pch = 1, lwd = 3)
lines(cxSimulatedBinaryBounded, type='l', col = colors[5], pch = 8, lty = 4, lwd = 5)
lines(cxUniform, type='l', col = colors[6], pch = 8, lty = 4, lwd = 5)
names4 = c("2points", '1point', 'SimulatedBB', 'Uniform')
legend('bottomright',names4 , pch = c(19,19,19), col = c(colors[1], colors[4], colors[5], colors[6]))
#######selecao#######
raw_data = read.csv2("CF01/clean_CF01-selWorst(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selWorst = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-selTournament(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selTournament = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-selRoulette(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selRoulette = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_selRandom(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selRandom = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-selBest(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
selBest = apply(teste, 2, mean)
#selecao
selecaof = data.frame(selBest, selRandom, selRoulette, selTournament, selWorst)
names6 = c('Best','Random','Roleta','Torneio','Worst')
boxplot(selecaof, names = names6, las = 3)
colors <- brewer.pal(5, "Paired")
plot(selBest, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Posicao Individuo')
lines(selRandom, type='l', col = colors[2], pch = 10)
lines(selRoulette, type='l', col = colors[3], pch = 1)
lines(selTournament, type='l', col = colors[4], pch = 2)
lines(selWorst, type='l', col = colors[5], pch = 8, lty = 4, lwd = 5)
legend('bottomright', names6, pch = c(19,19,19,19,19), col = c(colors[1], colors[2], colors[3], colors[4], colors[5]))
####mutacao#####
raw_data = read.csv2("CF01/clean_CF01-mutFlipBit(selBest, cxOnePoint).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutFlipBit = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-mutPolynomialBounded(selBest, cxOnePoint).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutPolynomialBounded = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-mutShuffleIndexes(cxOnePoint, selBest).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutShuffleIndexes = apply(teste, 2, mean)
mutacaof = data.frame(mutFlipBit, mutPolynomialBounded, mutShuffleIndexes)
names5 = c('Flipbit','Polynomial','Shuflle')
boxplot(mutacaof, names = names5, las = 3)
colors <- brewer.pal(3, "Set1")
plot(mutFlipBit, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
lines(mutPolynomialBounded, type='l', col = colors[2], pch = 0)
lines(mutShuffleIndexes, type='l', col = colors[3], pch = 1, lty = 4, lwd = 5)
legend('bottomright', names5, pch = c(19,19,19), col = c(colors[1], colors[2], colors[3]))
####crossover#####
raw_data = read.csv2("CF01/clean_CF01-cxBlend(selBest, mutFlmutShuffleIndexesipBit).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxBlend = apply(teste, 2, mean, na.rm = T)
raw_data = read.csv2("CF01/clean_CF01-cxOnePoint(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxOnePoint = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxSimulatedBinary(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxSimulatedBinary = apply(teste, 2, mean, na.rm = T)
raw_data = read.csv2("CF01/clean_CF01-mutShuffleIndexes(cxOnePoint, selBest).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
mutShuffleIndexes = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxSimulatedBinaryBounded(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxSimulatedBinaryBounded = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxTwoPoints(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxTwoPoints = apply(teste, 2, mean)
raw_data = read.csv2("CF01/clean_CF01-cxUniform(selBest, mutShuffleIndexes).txt", sep=' ', header=F)
teste = apply(raw_data, 1, as.character)
teste = apply(teste, 1, as.numeric)
cxUniform = apply(teste, 2, mean)
cxf = data.frame(cxSimulatedBinaryBounded, cxOnePoint, cxTwoPoints, cxUniform)
names4 = c('SimulateB.','1point' ,'2point','Uniform')
boxplot(cxf, names = names4, las = 3)
#boxplot(cxBlend)
#boxplot(cxSimulatedBinary)
colors <- brewer.pal(6, "Set1")
plot(cxBlend, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
plot(cxSimulatedBinary, type='l', col = colors[1], pch = 11, lwd = 5, ylab='medias', xlab='Geracoes')
plot(cxTwoPoints, type='l', col = colors[1], pch = 2, lwd = 1, ylab='medias', xlab='Geracoes')
lines(cxOnePoint, type='l', col = colors[4], pch = 1, lwd = 3)
lines(cxSimulatedBinaryBounded, type='l', col = colors[5], pch = 8, lty = 4, lwd = 5)
lines(cxUniform, type='l', col = colors[6], pch = 8, lty = 4, lwd = 5)
names4 = c("2points", '1point', 'SimulatedBB', 'Uniform')
legend('bottomright',names4 , pch = c(19,19,19), col = c(colors[1], colors[4], colors[5], colors[6]))
raw_data = read.csv2("CF01/clean_CF01-selWorst(cxOnePoint, mutShuffleIndexes).txt", sep=' ', header=F)
###media
setwd("~/Documents/UnB/GA/projeto-ga/simpleGA/simpleGA_v2.0/logBook")
mediaGeracao <- function(file){
raw_data = read.csv2(file, sep='', header=F)
teste = apply(raw_data, 1, as.character)
y2000 = apply(teste, 1, as.numeric)
soma = rep(0, 100)
for (i in 1:50){
for(j in 1:100){
soma[j]  = y2000[((i-1)*100)+j,1] + soma[j]
}
}
soma = soma/50
return(soma)
}
graficos <- function(uniform, blend, simulatedBinary, simBinBounded, year){
boxplot(uniform, blend,simulatedBinary, simBinBounded)
titulo = paste("Media do tempo Media das geracoes-", year, sep = '')
title(titulo,
ylab='LogLikelihood',
xlab=c('Uniform, Blend, Binary, Binary Bounded')
)
arquivo = paste(year, "MediaGeracaoBoxPlot.png", sep = '')
dev.copy(png, arquivo)
dev.off()
plot(uniform, pch = 19, col = "blue", lwd=2.5,
ylab='LogLikelihood',
xlab=c('Numero da geracao 0-99')
)
lines(blend, pch = 19, col = "yellow", lwd=2.5)
lines(simBinBounded, pch = 19, col = "red", lwd=2.5)
lines(simulatedBinary, pch = 19, col = "green", lwd=2.5)
titulo = paste("Media do tempo Media das geracoes-", year, sep = '')
title(titulo)
legend('bottom',
c('Uniform', 'Blend', 'Binary', 'Binary Bounded'),
lwd=c(2.5,2.5),
col=c("blue","yellow","red", "green")
)
arquivo = paste(year, "MediaGeracaoCurvas.png", sep = '')
dev.copy(png, arquivo)
dev.off()
}
uniform2000 = mediaGeracao("2000_Uniform.txt")
uniform2001 = mediaGeracao("2001_Uniform.txt")
uniform2002 = mediaGeracao("2002_Uniform.txt")
uniform2003 = mediaGeracao("2003_Uniform.txt")
uniform2004 = mediaGeracao("2004_Uniform.txt")
uniform2005 = mediaGeracao("2005_Uniform.txt")
uniform2006 = mediaGeracao("2006_Uniform.txt")
###media
setwd("~/Documents/UnB/GA/projeto-ga/simpleGA/simpleGA_v2.0/logBook")
mediaGeracao <- function(file){
raw_data = read.csv2(file, sep='', header=F)
teste = apply(raw_data, 1, as.character)
y2000 = apply(teste, 1, as.numeric)
soma = rep(0, 100)
for (i in 1:50){
for(j in 1:100){
soma[j]  = y2000[((i-1)*100)+j,1] + soma[j]
}
}
soma = soma/50
return(soma)
}
graficos <- function(uniform, blend, simulatedBinary, simBinBounded, year){
boxplot(uniform, blend,simulatedBinary, simBinBounded)
titulo = paste("Media do Tempo Media das geracoes-", year, sep = '')
title(titulo,
ylab='Tempo',
xlab=c('Uniform, Blend, Binary, Binary Bounded')
)
arquivo = paste(year, "MediaTempoGeracaoBoxPlot.png", sep = '')
dev.copy(png, arquivo)
dev.off()
plot(uniform, pch = 19, col = "blue", lwd=2.5,
ylab='Tempo',
xlab=c('Numero da geracao 0-99')
)
lines(blend, pch = 19, col = "yellow", lwd=2.5)
lines(simBinBounded, pch = 19, col = "red", lwd=2.5)
lines(simulatedBinary, pch = 19, col = "green", lwd=2.5)
titulo = paste("Media do Tempo Media das geracoes-", year, sep = '')
title(titulo)
legend('bottom',
c('Uniform', 'Blend', 'Binary', 'Binary Bounded'),
lwd=c(2.5,2.5),
col=c("blue","yellow","red", "green")
)
arquivo = paste(year, "MediaTempoGeracaoCurvas.png", sep = '')
dev.copy(png, arquivo)
dev.off()
}
uniform2000 = mediaGeracao("2000_Uniform.txt")
uniform2001 = mediaGeracao("2001_Uniform.txt")
uniform2002 = mediaGeracao("2002_Uniform.txt")
uniform2003 = mediaGeracao("2003_Uniform.txt")
uniform2004 = mediaGeracao("2004_Uniform.txt")
uniform2005 = mediaGeracao("2005_Uniform.txt")
uniform2006 = mediaGeracao("2006_Uniform.txt")
uniform2007 = mediaGeracao("2007_Uniform.txt")
uniform2008 = mediaGeracao("2008_Uniform.txt")
uniform2009 = mediaGeracao("2009_Uniform.txt")
uniform2010 = mediaGeracao("2010_Uniform.txt")
blend2000 = mediaGeracao("2000_blend.txt")
blend2001 = mediaGeracao("2001_blend.txt")
blend2002 = mediaGeracao("2002_blend.txt")
blend2003 = mediaGeracao("2003_blend.txt")
blend2004 = mediaGeracao("2004_blend.txt")
blend2005 = mediaGeracao("2005_blend.txt")
blend2006 = mediaGeracao("2006_blend.txt")
blend2007 = mediaGeracao("2007_blend.txt")
blend2008 = mediaGeracao("2008_blend.txt")
blend2009 = mediaGeracao("2009_blend.txt")
blend2010 = mediaGeracao("2010_blend.txt")
simulatedBinary2000 = mediaGeracao("2000_simulatedBinary.txt")
simulatedBinary2001 = mediaGeracao("2001_simulatedBinary.txt")
simulatedBinary2002 = mediaGeracao("2002_simulatedBinary.txt")
simulatedBinary2003 = mediaGeracao("2003_simulatedBinary.txt")
simulatedBinary2004 = mediaGeracao("2004_simulatedBinary.txt")
simulatedBinary2005 = mediaGeracao("2005_simulatedBinary.txt")
simulatedBinary2006 = mediaGeracao("2006_simulatedBinary.txt")
simulatedBinary2007 = mediaGeracao("2007_simulatedBinary.txt")
simulatedBinary2008 = mediaGeracao("2008_simulatedBinary.txt")
simulatedBinary2009 = mediaGeracao("2009_simulatedBinary.txt")
simulatedBinary2010 = mediaGeracao("2010_simulatedBinary.txt")
simBinBounded2000 = mediaGeracao("2000_simBinBounded.txt")
simBinBounded2001 = mediaGeracao("2001_simBinBounded.txt")
simBinBounded2002 = mediaGeracao("2002_simBinBounded.txt")
simBinBounded2003 = mediaGeracao("2003_simBinBounded.txt")
simBinBounded2004 = mediaGeracao("2004_simBinBounded.txt")
simBinBounded2005 = mediaGeracao("2005_simBinBounded.txt")
simBinBounded2006 = mediaGeracao("2006_simBinBounded.txt")
simBinBounded2007 = mediaGeracao("2007_simBinBounded.txt")
simBinBounded2008 = mediaGeracao("2008_simBinBounded.txt")
simBinBounded2009 = mediaGeracao("2009_simBinBounded.txt")
simBinBounded2010 = mediaGeracao("2010_simBinBounded.txt")
graficos(uniform2000, blend2000, simulatedBinary2000, simBinBounded2000, "2000")
graficos(uniform2001, blend2001, simulatedBinary2001, simBinBounded2001, "2001")
graficos(uniform2002, blend2002, simulatedBinary2002, simBinBounded2002, "2002")
graficos(uniform2003, blend2003, simulatedBinary2003, simBinBounded2003, "2003")
graficos(uniform2004, blend2004, simulatedBinary2004, simBinBounded2004, "2004")
graficos(uniform2005, blend2005, simulatedBinary2005, simBinBounded2005, "2005")
graficos(uniform2006, blend2006, simulatedBinary2006, simBinBounded2006, "2006")
graficos(uniform2007, blend2007, simulatedBinary2007, simBinBounded2007, "2007")
graficos(uniform2008, blend2008, simulatedBinary2008, simBinBounded2008, "2008")
graficos(uniform2009, blend2009, simulatedBinary2009, simBinBounded2009, "2009")
graficos(uniform2010, blend2010, simulatedBinary2010, simBinBounded2010, "2010")
head(y2000)
raw_data = read.csv2(file, sep='', header=F)
teste = apply(raw_data, 1, as.character)
y2000 = apply(teste, 1, as.numeric)
setwd("~/Documents/UnB/GA/projeto-ga/simpleGA/simpleGA_v2.0/logBook")
raw_data = read.csv2(file, sep='', header=F)
teste = apply(raw_data, 1, as.character)
y2000 = apply(teste, 1, as.numeric)
###media
setwd("~/Documents/UnB/GA/projeto-ga/simpleGA/simpleGA_v2.0/logBook")
mediaGeracao <- function(file){
raw_data = read.csv2(file, sep='', header=F)
teste = apply(raw_data, 1, as.character)
y2000 = apply(teste, 1, as.numeric)
print (head(y2000))
break
soma = rep(0, 100)
for (i in 1:50){
for(j in 1:100){
soma[j]  = y2000[((i-1)*100)+j,1] + soma[j]
}
}
soma = soma/50
return(soma)
}
graficos <- function(uniform, blend, simulatedBinary, simBinBounded, year){
boxplot(uniform, blend,simulatedBinary, simBinBounded)
titulo = paste("Media do Tempo Media das geracoes-", year, sep = '')
title(titulo,
ylab='Tempo',
xlab=c('Uniform, Blend, Binary, Binary Bounded')
)
arquivo = paste(year, "MediaTempoGeracaoBoxPlot.png", sep = '')
dev.copy(png, arquivo)
dev.off()
plot(uniform, pch = 19, col = "blue", lwd=2.5,
ylab='Tempo',
xlab=c('Numero da geracao 0-99')
)
lines(blend, pch = 19, col = "yellow", lwd=2.5)
lines(simBinBounded, pch = 19, col = "red", lwd=2.5)
lines(simulatedBinary, pch = 19, col = "green", lwd=2.5)
titulo = paste("Media do Tempo Media das geracoes-", year, sep = '')
title(titulo)
legend('bottom',
c('Uniform', 'Blend', 'Binary', 'Binary Bounded'),
lwd=c(2.5,2.5),
col=c("blue","yellow","red", "green")
)
arquivo = paste(year, "MediaTempoGeracaoCurvas.png", sep = '')
dev.copy(png, arquivo)
dev.off()
}
uniform2000 = mediaGeracao("2000_Uniform.txt")
uniform2001 = mediaGeracao("2001_Uniform.txt")
uniform2002 = mediaGeracao("2002_Uniform.txt")
uniform2003 = mediaGeracao("2003_Uniform.txt")
uniform2004 = mediaGeracao("2004_Uniform.txt")
uniform2005 = mediaGeracao("2005_Uniform.txt")
uniform2006 = mediaGeracao("2006_Uniform.txt")
###media
setwd("~/Documents/UnB/GA/projeto-ga/simpleGA/simpleGA_v2.0/logBook")
mediaGeracao <- function(file){
raw_data = read.csv2(file, sep='', header=F)
teste = apply(raw_data, 1, as.character)
y2000 = apply(teste, 1, as.numeric)
soma = rep(0, 100)
for (i in 1:50){
for(j in 1:100){
soma[j]  = y2000[((i-1)*100)+j,2] + soma[j]
}
}
soma = soma/50
return(soma)
}
graficos <- function(uniform, blend, simulatedBinary, simBinBounded, year){
boxplot(uniform, blend,simulatedBinary, simBinBounded)
titulo = paste("Media do Tempo Media das geracoes-", year, sep = '')
title(titulo,
ylab='Tempo',
xlab=c('Uniform, Blend, Binary, Binary Bounded')
)
arquivo = paste(year, "MediaTempoGeracaoBoxPlot.png", sep = '')
dev.copy(png, arquivo)
dev.off()
plot(uniform, pch = 19, col = "blue", lwd=2.5,
ylab='Tempo',
xlab=c('Numero da geracao 0-99')
)
lines(blend, pch = 19, col = "yellow", lwd=2.5)
lines(simBinBounded, pch = 19, col = "red", lwd=2.5)
lines(simulatedBinary, pch = 19, col = "green", lwd=2.5)
titulo = paste("Media do Tempo Media das geracoes-", year, sep = '')
title(titulo)
legend('bottom',
c('Uniform', 'Blend', 'Binary', 'Binary Bounded'),
lwd=c(2.5,2.5),
col=c("blue","yellow","red", "green")
)
arquivo = paste(year, "MediaTempoGeracaoCurvas.png", sep = '')
dev.copy(png, arquivo)
dev.off()
}
uniform2000 = mediaGeracao("2000_Uniform.txt")
uniform2001 = mediaGeracao("2001_Uniform.txt")
uniform2002 = mediaGeracao("2002_Uniform.txt")
uniform2003 = mediaGeracao("2003_Uniform.txt")
uniform2004 = mediaGeracao("2004_Uniform.txt")
uniform2005 = mediaGeracao("2005_Uniform.txt")
uniform2006 = mediaGeracao("2006_Uniform.txt")
uniform2007 = mediaGeracao("2007_Uniform.txt")
uniform2008 = mediaGeracao("2008_Uniform.txt")
uniform2009 = mediaGeracao("2009_Uniform.txt")
uniform2010 = mediaGeracao("2010_Uniform.txt")
blend2000 = mediaGeracao("2000_blend.txt")
blend2001 = mediaGeracao("2001_blend.txt")
blend2002 = mediaGeracao("2002_blend.txt")
blend2003 = mediaGeracao("2003_blend.txt")
blend2004 = mediaGeracao("2004_blend.txt")
blend2005 = mediaGeracao("2005_blend.txt")
blend2006 = mediaGeracao("2006_blend.txt")
blend2007 = mediaGeracao("2007_blend.txt")
blend2008 = mediaGeracao("2008_blend.txt")
blend2009 = mediaGeracao("2009_blend.txt")
blend2010 = mediaGeracao("2010_blend.txt")
simulatedBinary2000 = mediaGeracao("2000_simulatedBinary.txt")
simulatedBinary2001 = mediaGeracao("2001_simulatedBinary.txt")
simulatedBinary2002 = mediaGeracao("2002_simulatedBinary.txt")
simulatedBinary2003 = mediaGeracao("2003_simulatedBinary.txt")
simulatedBinary2004 = mediaGeracao("2004_simulatedBinary.txt")
simulatedBinary2005 = mediaGeracao("2005_simulatedBinary.txt")
simulatedBinary2006 = mediaGeracao("2006_simulatedBinary.txt")
simulatedBinary2007 = mediaGeracao("2007_simulatedBinary.txt")
simulatedBinary2008 = mediaGeracao("2008_simulatedBinary.txt")
simulatedBinary2009 = mediaGeracao("2009_simulatedBinary.txt")
simulatedBinary2010 = mediaGeracao("2010_simulatedBinary.txt")
simBinBounded2000 = mediaGeracao("2000_simBinBounded.txt")
simBinBounded2001 = mediaGeracao("2001_simBinBounded.txt")
simBinBounded2002 = mediaGeracao("2002_simBinBounded.txt")
simBinBounded2003 = mediaGeracao("2003_simBinBounded.txt")
simBinBounded2004 = mediaGeracao("2004_simBinBounded.txt")
simBinBounded2005 = mediaGeracao("2005_simBinBounded.txt")
simBinBounded2006 = mediaGeracao("2006_simBinBounded.txt")
simBinBounded2007 = mediaGeracao("2007_simBinBounded.txt")
simBinBounded2008 = mediaGeracao("2008_simBinBounded.txt")
simBinBounded2009 = mediaGeracao("2009_simBinBounded.txt")
simBinBounded2010 = mediaGeracao("2010_simBinBounded.txt")
graficos(uniform2000, blend2000, simulatedBinary2000, simBinBounded2000, "2000")
graficos(uniform2001, blend2001, simulatedBinary2001, simBinBounded2001, "2001")
graficos(uniform2002, blend2002, simulatedBinary2002, simBinBounded2002, "2002")
graficos(uniform2003, blend2003, simulatedBinary2003, simBinBounded2003, "2003")
graficos(uniform2004, blend2004, simulatedBinary2004, simBinBounded2004, "2004")
graficos(uniform2005, blend2005, simulatedBinary2005, simBinBounded2005, "2005")
graficos(uniform2006, blend2006, simulatedBinary2006, simBinBounded2006, "2006")
graficos(uniform2007, blend2007, simulatedBinary2007, simBinBounded2007, "2007")
graficos(uniform2008, blend2008, simulatedBinary2008, simBinBounded2008, "2008")
graficos(uniform2009, blend2009, simulatedBinary2009, simBinBounded2009, "2009")
graficos(uniform2010, blend2010, simulatedBinary2010, simBinBounded2010, "2010")
